openapi: 3.0.2
info:
  title: Books MI7
  description: This API allows you to navigate informations about books
  contact:
    name: "Bonacorsi Camille, Carrel Quentin, Delon Lo√Øc, Galleron Evan"
    email: quentin.carrel@etu.univ-grenoble-alpes.fr
  version: 1.0.0
servers:
- url: /
paths:
  /:
    get:
      summary: Entry points
      operationId: rootGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/links'
      x-swagger-router-controller: Default
  /authors:
    get:
      summary: List of authors
      operationId: authorsGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/author'
                x-content-type: application/json
        "400":
          description: No authors found
      x-swagger-router-controller: Default
    put:
      summary: Add/Overwrite an author
      operationId: authorsPUT
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/author'
      responses:
        "200":
          description: OK
        "400":
          description: Malformed request
      x-swagger-router-controller: Default
    post:
      summary: Add/Update an author
      operationId: authorsPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/author'
      responses:
        "200":
          description: OK
        "400":
          description: Malformed request
      x-swagger-router-controller: Default
    delete:
      summary: Deletes an author
      operationId: authorsDELETE
      responses:
        "200":
          description: OK
        "404":
          description: Author didn't exist
      x-swagger-router-controller: Default
  /authors/{name}:
    get:
      summary: Informations about an author
      operationId: authorsNameGET
      parameters:
      - name: name
        in: path
        description: Name of the author
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/author'
        "400":
          description: No author found
      x-swagger-router-controller: Default
  /authors/{name}/decades:
    get:
      summary: Decades in which the author wrote pieces
      operationId: authorsNameDecadesGET
      parameters:
      - name: name
        in: path
        description: Name of the author
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/decade'
                x-content-type: application/json
        "400":
          description: No decade found
      x-swagger-router-controller: Default
  /authors/{name}/decades/{decade}:
    get:
      summary: Information about the decade and genres of works written in this decade
      operationId: authorsNameDecadesDecadeGET
      parameters:
      - name: name
        in: path
        description: Name of the author
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: decade
        in: path
        description: Name of the author
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Decade not found
      x-swagger-router-controller: Default
  /authors/{name}/decades/{decade}/{genre}:
    get:
      summary: Informations about the genre and pieces of that genre
      operationId: authorsNameDecadesDecadeGenreGET
      parameters:
      - name: name
        in: path
        description: Name of the author
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: decade
        in: path
        description: Decade of creation
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: genre
        in: path
        description: Genre of the piece
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Genre not found
      x-swagger-router-controller: Default
  /authors/{name}/decades/{decade}/{genre}/{piece}:
    get:
      summary: Information about the piece and its editions
      operationId: authorsNameDecadesDecadeGenrePieceGET
      parameters:
      - name: name
        in: path
        description: Name of the author
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: decade
        in: path
        description: Decade of creation
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: genre
        in: path
        description: Genre of the piece
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: piece
        in: path
        description: Name of the piece
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: Piece not found
      x-swagger-router-controller: Default
  /authors/{name}/decades/{decade}/{genre}/{piece}/{isbn}:
    get:
      summary: Information about the chosen edition
      operationId: authorsNameDecadesDecadeGenrePieceIsbnGET
      parameters:
      - name: name
        in: path
        description: Name of the author
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: decade
        in: path
        description: Decade of creation
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: genre
        in: path
        description: Genre of the piece
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: piece
        in: path
        description: Name of the piece
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isbn
        in: path
        description: ISBN of the published book
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edition'
        "400":
          description: Edition not found
      x-swagger-router-controller: Default
  /authors/{name}/pieces:
    get:
      summary: Pieces written by that author
      operationId: authorsNamePiecesGET
      parameters:
      - name: name
        in: path
        description: Name of the author
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/piece'
                x-content-type: application/json
        "400":
          description: No piece found
      x-swagger-router-controller: Default
  /authors/{name}/editions:
    get:
      summary: Published pieces by the author
      operationId: authorsNameEditionsGET
      parameters:
      - name: name
        in: path
        description: Name of the author
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/edition'
                x-content-type: application/json
        "400":
          description: No edition found
      x-swagger-router-controller: Default
  /authors/{name}/editions/{isbn}:
    get:
      summary: Information about the chosen edition
      operationId: authorsNameEditionsIsbnGET
      parameters:
      - name: name
        in: path
        description: Name of the author
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isbn
        in: path
        description: ISBN of the published book
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edition'
        "400":
          description: Edition not found
      x-swagger-router-controller: Default
  /editors:
    get:
      summary: List of editors
      operationId: editorsGET
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/editor'
                x-content-type: application/json
        "400":
          description: No editor found
      x-swagger-router-controller: Default
  /editors/{name}:
    get:
      summary: Information about the editor
      operationId: editorsNameGET
      parameters:
      - name: name
        in: path
        description: Name of the editor
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/editor'
        "400":
          description: Editor not found
      x-swagger-router-controller: Default
  /editors/{name}/collections:
    get:
      summary: List of collections by that editor
      operationId: editorsNameCollectionsGET
      parameters:
      - name: name
        in: path
        description: Name of the editor
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collection'
                x-content-type: application/json
        "400":
          description: No collection found
      x-swagger-router-controller: Default
  /editors/{name}/collections/{collection}:
    get:
      summary: Information about that collection and its edition
      operationId: editorsNameCollectionsCollectionGET
      parameters:
      - name: name
        in: path
        description: Name of the editor
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collection
        in: path
        description: Name of the collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "400":
          description: Collection not found
      x-swagger-router-controller: Default
  /editors/{name}/collections/{collection}/{isbn}:
    get:
      summary: Information about that published piece
      operationId: editorsNameCollectionsCollectionIsbnGET
      parameters:
      - name: name
        in: path
        description: Name of the editor
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: collection
        in: path
        description: Name of the collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isbn
        in: path
        description: ISBN of the published book
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edition'
        "400":
          description: Edition not found
      x-swagger-router-controller: Default
  /editors/{name}/editions:
    get:
      summary: List of published pieces by that editor
      operationId: editorsNameEditionsGET
      parameters:
      - name: name
        in: path
        description: Name of the editor
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/edition'
                x-content-type: application/json
        "400":
          description: No editions found
      x-swagger-router-controller: Default
  /editors/{name}/editions/{isbn}:
    get:
      summary: Information about that published piece
      operationId: editorsNameEditionsIsbnGET
      parameters:
      - name: name
        in: path
        description: Name of the editor
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isbn
        in: path
        description: ISBN of the published book
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edition'
        "400":
          description: Edition not found
      x-swagger-router-controller: Default
components:
  schemas:
    author:
      properties:
        name:
          type: string
        surname:
          type: string
        date_of_birth:
          type: string
      example:
        surname: surname
        date_of_birth: date_of_birth
        name: name
    decade:
      properties:
        range:
          type: string
      example:
        range: range
    genre:
      properties:
        name:
          type: string
      example:
        name: name
    piece:
      properties:
        title:
          type: string
      example:
        title: title
    edition:
      properties:
        title:
          type: string
        isbn:
          type: string
        year:
          type: integer
      example:
        year: 0
        isbn: isbn
        title: title
    editor:
      properties:
        name:
          type: string
      example:
        name: name
    collection:
      properties:
        name:
          type: string
      example:
        name: name
    links:
      properties:
        href:
          type: string
        method:
          type: string
      example:
        method: method
        href: href
    inline_response_200:
      type: object
      properties:
        decade:
          $ref: '#/components/schemas/decade'
        links:
          type: array
          items:
            $ref: '#/components/schemas/genre'
      example:
        decade:
          range: range
        links:
        - name: name
        - name: name
    inline_response_200_1:
      type: object
      properties:
        genre:
          $ref: '#/components/schemas/genre'
        links:
          type: array
          items:
            $ref: '#/components/schemas/piece'
      example:
        genre:
          name: name
        links:
        - title: title
        - title: title
    inline_response_200_2:
      type: object
      properties:
        piece:
          $ref: '#/components/schemas/piece'
        links:
          type: array
          items:
            $ref: '#/components/schemas/edition'
      example:
        piece:
          title: title
        links:
        - year: 0
          isbn: isbn
          title: title
        - year: 0
          isbn: isbn
          title: title
    inline_response_200_3:
      type: object
      properties:
        collection:
          $ref: '#/components/schemas/collection'
        links:
          type: array
          items:
            $ref: '#/components/schemas/edition'
      example:
        links:
        - year: 0
          isbn: isbn
          title: title
        - year: 0
          isbn: isbn
          title: title
        collection:
          name: name
