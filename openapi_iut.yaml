openapi: 3.0.2
info:
  title: "Books MI7"
  version: 1.0.0
  description: This API allows you to navigate informations about books
  contact:
    email: quentin.carrel@etu.univ-grenoble-alpes.fr
    name: Bonacorsi Camille, Carrel Quentin, Delon Lo√Øc, Galleron Evan

components:
  schemas:
    author:
      properties:
        name:
          type: string
        surname:
          type: string
        date_of_birth:
          type: string
    decade:
      properties:
        range:
          type: string
    genre:
      properties:
        name:
          type: string
    piece:
      properties:
        title:
          type: string
    edition:
      properties:
        title:
          type: string
        isbn:
          type: string
        year:
          type: integer
    editor:
      properties:
        name:
          type: string
    collection:
      properties:
        name:
          type: string
    links:
      properties:
        href:
          type: string
        method:
          type: string

paths:
  /:
    get:
      summary: Entry points
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/links'
  /authors:
    get:
      summary: List of authors 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/author'
        '400':
          description: No authors found
    put:
      summary: Add/Overwrite an author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/author'
      responses:
        '200':
          description: OK
        '400':
          description: Malformed request
    post:
      summary: Add/Update an author
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/author'
      responses:
        '200':
          description: OK
        '400':
          description: Malformed request
    delete:
      summary: Deletes an author
      responses:
        '200':
          description: OK
        '404':
          description: Author didn't exist
  /authors/{name}:
    get:
      summary: Informations about an author
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the author
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/author'
        '400':
          description: No author found
  /authors/{name}/decades:
    get:
      summary: Decades in which the author wrote pieces
      parameters:
        - name: name
          schema:
            type: string
          in: path
          required: true
          description: Name of the author
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/decade'
        '400':
          description: No decade found
  /authors/{name}/decades/{decade}:
    get:
      summary: Information about the decade and genres of works written in this decade
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the author
          - name: decade
            schema:
              type: string
            in: path
            required: true
            description: Name of the author
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  decade:
                    $ref: '#/components/schemas/decade'
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/genre'
        '400':
          description: Decade not found
  /authors/{name}/decades/{decade}/{genre}:
    get:
      summary: Informations about the genre and pieces of that genre
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the author
          - name: decade
            schema:
              type: string
            in: path
            required: true
            description: Decade of creation
          - name: genre
            schema:
              type: string
            in: path
            required: true
            description: Genre of the piece
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  decade:
                    $ref: '#/components/schemas/genre'
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/piece'
        '400':
          description: Genre not found
  /authors/{name}/decades/{decade}/{genre}/{piece}:
    get:
      summary: Information about the piece and its editions
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the author
          - name: decade
            schema:
              type: string
            in: path
            required: true
            description: Decade of creation
          - name: genre
            schema:
              type: string
            in: path
            required: true
            description: Genre of the piece
          - name: piece
            schema:
              type: string
            in: path
            required: true
            description: Name of the piece
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  decade:
                    $ref: '#/components/schemas/piece'
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/edition'
        '400':
          description: Piece not found
  /authors/{name}/decades/{decade}/{genre}/{piece}/{isbn}:
    get:
      summary: Information about the chosen edition
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the author
          - name: decade
            schema:
              type: string
            in: path
            required: true
            description: Decade of creation
          - name: genre
            schema:
              type: string
            in: path
            required: true
            description: Genre of the piece
          - name: piece
            schema:
              type: string
            in: path
            required: true
            description: Name of the piece
          - name: isbn
            schema:
              type: string
            in: path
            required: true
            description: ISBN of the published book
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edition'
        '400':
          description: Edition not found
  /authors/{name}/pieces:
    get:
      summary: Pieces written by that author
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the author
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/piece'
        '400':
          description: No piece found
  /authors/{name}/editions:
    get:
      summary: Published pieces by the author
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the author
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/edition'
        '400':
          description: No edition found
  /authors/{name}/editions/{isbn}:
    get:
      summary: Information about the chosen edition
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the author
          - name: isbn
            schema:
              type: string
            in: path
            required: true
            description: ISBN of the published book
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edition'
        '400':
          description: Edition not found
  /editors:
    get:
      summary: List of editors
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/editor'
        '400':
          description: No editor found
  /editors/{name}:
    get:
      summary: Information about the editor
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the editor
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/editor'
        '400':
          description: Editor not found
  /editors/{name}/collections:
    get:
      summary: List of collections by that editor
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the editor
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collection'
        '400':
          description: No collection found
  /editors/{name}/collections/{collection}:
    get:
      summary: Information about that collection and its edition
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the editor
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection:
                    $ref: '#/components/schemas/collection'
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/edition'
        '400':
          description: Collection not found
# It would seem that while the specification prohibits having any path lead to more than one resource, having more than one path per resource is not an issue.
  /editors/{name}/collections/{collection}/{isbn}:
    get:
      summary: Information about that published piece
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the editor
          - name: collection
            schema:
              type: string
            in: path
            required: true
            description: Name of the collection
          - name: isbn
            schema:
              type: string
            in: path
            required: true
            description: ISBN of the published book
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edition'
        '400':
          description: Edition not found
  /editors/{name}/editions:
    get:
      summary: List of published pieces by that editor
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the editor
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/edition'
        '400':
          description: No editions found
  /editors/{name}/editions/{isbn}:
    get:
      summary: Information about that published piece
      parameters:
          - name: name
            schema:
              type: string
            in: path
            required: true
            description: Name of the editor
          - name: isbn
            schema:
              type: string
            in: path
            required: true
            description: ISBN of the published book
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/edition'
        '400':
          description: Edition not found
